#!/bin/bash

# to generate ansible inventory file hosts.ini and ansible vars.yaml

set -euo pipefail

source "$(dirname "$0")/../cluster.env"
export SSH_PRIVATE_KEY_PATH NODES K8S_POD_CIDR

INVENTORY_OUTPUT_PATH="$(dirname "$0")/hosts.ini"
VARS_OUTPUT_PATH="$(dirname "$0")/vars.yaml"

echo "Generating Ansible inventory..."
echo

# Start writing hosts.ini
cat > "${INVENTORY_OUTPUT_PATH}" <<EOF
[k8s_lb]
EOF

# Extract and group nodes
for NODE in "${NODES[@]}"; do
  read -r NAME MAC IP CPU MEM DISK <<< "$NODE"

  case "$NAME" in
    k8s-lb*)
      echo "$NAME ansible_host=$IP ansible_user=ubuntu ansible_ssh_private_key_file=${SSH_PRIVATE_KEY_PATH}" >> "${INVENTORY_OUTPUT_PATH}"
      ;;
  esac
done

echo >> "${INVENTORY_OUTPUT_PATH}"
echo "[k8s_masters]" >> "${INVENTORY_OUTPUT_PATH}"
for NODE in "${NODES[@]}"; do
  read -r NAME MAC IP CPU MEM DISK <<< "$NODE"

  case "$NAME" in
    k8s-master-*)
      echo "$NAME ansible_host=$IP ansible_user=ubuntu ansible_ssh_private_key_file=${SSH_PRIVATE_KEY_PATH}" >> "${INVENTORY_OUTPUT_PATH}"
      ;;
  esac
done

echo >> "${INVENTORY_OUTPUT_PATH}"
echo "[k8s_workers]" >> "${INVENTORY_OUTPUT_PATH}"
for NODE in "${NODES[@]}"; do
  read -r NAME MAC IP CPU MEM DISK <<< "$NODE"

  case "$NAME" in
    k8s-worker-*)
      echo "$NAME ansible_host=$IP ansible_user=ubuntu ansible_ssh_private_key_file=${SSH_PRIVATE_KEY_PATH}" >> "${INVENTORY_OUTPUT_PATH}"
      ;;
  esac
done

cat >> "${INVENTORY_OUTPUT_PATH}" <<EOF

[all:vars]
ansible_python_interpreter=/usr/bin/python3
ansible_ssh_common_args='-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
EOF

echo
echo "Ansible inventory generated: ${INVENTORY_OUTPUT_PATH}"
echo

echo "Testing connection..."
ansible -i ${INVENTORY_OUTPUT_PATH} all -m ping

echo ""
echo "Generating Ansible vars file..."

LOAD_BALANCER_IP=""
CONTROL_PLANE_NODES=()
POD_CIDR="${K8S_POD_CIDR}"
KUBE_VERSION="${KUBE_VERSION}"
CNI_PLUGIN="${CNI_PLUGIN}"

for NODE in "${NODES[@]}"; do
  read -r NAME MAC IP CPU MEM DISK <<< "$NODE"

  case "$NAME" in
    k8s-lb*)
      LOAD_BALANCER_IP="$IP"
      ;;
    k8s-master-*)
      CONTROL_PLANE_NODES+=("- { name: \"$NAME\", ip: \"$IP\" }")
      ;;
  esac
done

cat > "$VARS_OUTPUT_PATH" <<EOF
# Autogenerated from cluster.env.
# DO NOT edit manually!

kube_version: "$KUBE_VERSION"
cni_plugin: "$CNI_PLUGIN"
pod_cidr: "$POD_CIDR"
load_balancer_ip: "$LOAD_BALANCER_IP"
kube_apiserver_port: 6443
control_plane_nodes:
$(printf '  %s\n' "${CONTROL_PLANE_NODES[@]}")
EOF

echo "Generated Ansible vars file: ${VARS_OUTPUT_PATH}"
